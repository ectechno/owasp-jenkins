using System.Net;
using System.Net.Http;
using System.Net.Http.Headers;

using ZAPPenTester.Interfaces;

namespace ZAPPenTester
{
    /// <summary>
    /// This class is responsible for providing an implementation for IHttpClientHelper.
    /// It encapsulates the logic of making http requests.
    /// </summary>
    public class HttpClientHelper : IHttpClientHelper
    {
        private readonly ISettings settings;

        public HttpClientHelper(ISettings settings)
        {
            this.settings = settings;
        }

        public string MakeHttpRequest(string url, HttpResponseType requestResponseType)
        {
            HttpClient client = PrepareHttpClient(requestResponseType);
            HttpResponseMessage response = client.GetAsync(url).Result;

            if (response.IsSuccessStatusCode)
            {
                return response.Content.ReadAsStringAsync().Result;
            }

            return null;
        }

        private HttpClient PrepareHttpClient(HttpResponseType httpResponseType)
        {
            var httpClientHandler = new HttpClientHandler
            {
                Proxy = new WebProxy(settings.ZapProxy, false, new string[] { }),
                UseProxy = true
            };

            var client = new HttpClient(httpClientHandler);
            client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/" + httpResponseType.ToString()));
            
            return client;
        }
    }
}